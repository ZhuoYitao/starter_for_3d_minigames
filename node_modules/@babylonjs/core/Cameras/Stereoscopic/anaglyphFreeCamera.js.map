{"version":3,"file":"anaglyphFreeCamera.js","sourceRoot":"","sources":["../../../../../../lts/core/generated/Cameras/Stereoscopic/anaglyphFreeCamera.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAC9C,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AAEtD,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAClD,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,OAAO,EAAE,8BAA8B,EAAE,MAAM,yCAAyC,CAAC;AAEzF,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,UAAC,IAAI,EAAE,KAAK,EAAE,OAAO;IAC/D,OAAO,cAAM,OAAA,IAAI,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,EAAhF,CAAgF,CAAC;AAClG,CAAC,CAAC,CAAC;AAEH;;;GAGG;AACH;IAAwC,sCAAU;IAC9C;;;;;;OAMG;IACH,4BAAY,IAAY,EAAE,QAAiB,EAAE,kBAA0B,EAAE,KAAa;QAAtF,YACI,kBAAM,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,SAG/B;QAUS,iBAAW,GAAG,8BAA8B,CAAC,IAAI,CAAC,IAAI,EAAE,KAAI,CAAC,CAAC;QAZpE,KAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,8BAA8B,EAAE,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,CAAC,CAAC;;IAC7G,CAAC;IAED;;;OAGG;IACI,yCAAY,GAAnB;QACI,OAAO,oBAAoB,CAAC;IAChC,CAAC;IAGL,yBAAC;AAAD,CAAC,AAvBD,CAAwC,UAAU,GAuBjD","sourcesContent":["import { Camera } from \"../../Cameras/camera\";\r\nimport { FreeCamera } from \"../../Cameras/freeCamera\";\r\nimport type { Scene } from \"../../scene\";\r\nimport { Vector3 } from \"../../Maths/math.vector\";\r\nimport { Node } from \"../../node\";\r\nimport { setStereoscopicAnaglyphRigMode } from \"../RigModes/stereoscopicAnaglyphRigMode\";\r\n\r\nNode.AddNodeConstructor(\"AnaglyphFreeCamera\", (name, scene, options) => {\r\n    return () => new AnaglyphFreeCamera(name, Vector3.Zero(), options.interaxial_distance, scene);\r\n});\r\n\r\n/**\r\n * Camera used to simulate anaglyphic rendering (based on FreeCamera)\r\n * @see https://doc.babylonjs.com/features/cameras#anaglyph-cameras\r\n */\r\nexport class AnaglyphFreeCamera extends FreeCamera {\r\n    /**\r\n     * Creates a new AnaglyphFreeCamera\r\n     * @param name defines camera name\r\n     * @param position defines initial position\r\n     * @param interaxialDistance defines distance between each color axis\r\n     * @param scene defines the hosting scene\r\n     */\r\n    constructor(name: string, position: Vector3, interaxialDistance: number, scene?: Scene) {\r\n        super(name, position, scene);\r\n        this.interaxialDistance = interaxialDistance;\r\n        this.setCameraRigMode(Camera.RIG_MODE_STEREOSCOPIC_ANAGLYPH, { interaxialDistance: interaxialDistance });\r\n    }\r\n\r\n    /**\r\n     * Gets camera class name\r\n     * @returns AnaglyphFreeCamera\r\n     */\r\n    public getClassName(): string {\r\n        return \"AnaglyphFreeCamera\";\r\n    }\r\n\r\n    protected _setRigMode = setStereoscopicAnaglyphRigMode.bind(null, this);\r\n}\r\n"]}