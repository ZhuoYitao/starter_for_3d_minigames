{"version":3,"file":"minmaxRedux.fragment.js","sourceRoot":"","sources":["../../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAErD,IAAM,IAAI,GAAG,wBAAwB,CAAC;AACtC,IAAM,MAAM,GAAG,2qDAuDd,CAAC;AACF,aAAa;AACb,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACxC,cAAc;AACd,MAAM,CAAC,IAAM,sBAAsB,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"minmaxReduxPixelShader\";\nconst shader = `varying vec2 vUV;\runiform sampler2D textureSampler;\r#if defined(INITIAL)\nuniform sampler2D sourceTexture;\runiform vec2 texSize;\rvoid main(void)\r{\rivec2 coord=ivec2(vUV*(texSize-1.0));\rfloat f1=texelFetch(sourceTexture,coord,0).r;\rfloat f2=texelFetch(sourceTexture,coord+ivec2(1,0),0).r;\rfloat f3=texelFetch(sourceTexture,coord+ivec2(1,1),0).r;\rfloat f4=texelFetch(sourceTexture,coord+ivec2(0,1),0).r;\rfloat minz=min(min(min(f1,f2),f3),f4);\r#ifdef DEPTH_REDUX\nfloat maxz=max(max(max(sign(1.0-f1)*f1,sign(1.0-f2)*f2),sign(1.0-f3)*f3),sign(1.0-f4)*f4);\r#else\nfloat maxz=max(max(max(f1,f2),f3),f4);\r#endif\nglFragColor=vec4(minz,maxz,0.,0.);\r}\r#elif defined(MAIN)\nuniform vec2 texSize;\rvoid main(void)\r{\rivec2 coord=ivec2(vUV*(texSize-1.0));\rvec2 f1=texelFetch(textureSampler,coord,0).rg;\rvec2 f2=texelFetch(textureSampler,coord+ivec2(1,0),0).rg;\rvec2 f3=texelFetch(textureSampler,coord+ivec2(1,1),0).rg;\rvec2 f4=texelFetch(textureSampler,coord+ivec2(0,1),0).rg;\rfloat minz=min(min(min(f1.x,f2.x),f3.x),f4.x);\rfloat maxz=max(max(max(f1.y,f2.y),f3.y),f4.y);\rglFragColor=vec4(minz,maxz,0.,0.);\r}\r#elif defined(ONEBEFORELAST)\nuniform ivec2 texSize;\rvoid main(void)\r{\rivec2 coord=ivec2(vUV*vec2(texSize-1));\rvec2 f1=texelFetch(textureSampler,coord % texSize,0).rg;\rvec2 f2=texelFetch(textureSampler,(coord+ivec2(1,0)) % texSize,0).rg;\rvec2 f3=texelFetch(textureSampler,(coord+ivec2(1,1)) % texSize,0).rg;\rvec2 f4=texelFetch(textureSampler,(coord+ivec2(0,1)) % texSize,0).rg;\rfloat minz=min(f1.x,f2.x);\rfloat maxz=max(f1.y,f2.y);\rglFragColor=vec4(minz,maxz,0.,0.);\r}\r#elif defined(LAST)\nvoid main(void)\r{\rglFragColor=vec4(0.);\rif (true) { \rdiscard;\r}\r}\r#endif\n`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport const minmaxReduxPixelShader = { name, shader };\n"]}