{"version":3,"file":"blur.fragment.js","sourceRoot":"","sources":["../../../../../lts/core/generated/Shaders/blur.fragment.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAErD,IAAM,IAAI,GAAG,iBAAiB,CAAC;AAC/B,IAAM,MAAM,GAAG,yqBA2Bb,CAAC;AACH,aAAa;AACb,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACxC,cAAc;AACd,MAAM,CAAC,IAAM,eAAe,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"blurPixelShader\";\nconst shader = `varying vec2 vUV;\runiform sampler2D textureSampler;\runiform vec2 screenSize;\runiform vec2 direction;\runiform float blurWidth;\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\rfloat weights[7];\rweights[0]=0.05;\rweights[1]=0.1;\rweights[2]=0.2;\rweights[3]=0.3;\rweights[4]=0.2;\rweights[5]=0.1;\rweights[6]=0.05;\rvec2 texelSize=vec2(1.0/screenSize.x,1.0/screenSize.y);\rvec2 texelStep=texelSize*direction*blurWidth;\rvec2 start=vUV-3.0*texelStep;\rvec4 baseColor=vec4(0.,0.,0.,0.);\rvec2 texelOffset=vec2(0.,0.);\rfor (int i=0; i<7; i++)\r{\rbaseColor+=texture2D(textureSampler,start+texelOffset)*weights[i];\rtexelOffset+=texelStep;\r}\rgl_FragColor=baseColor;\r}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport const blurPixelShader = { name, shader };\n"]}