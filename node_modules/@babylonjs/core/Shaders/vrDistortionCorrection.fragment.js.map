{"version":3,"file":"vrDistortionCorrection.fragment.js","sourceRoot":"","sources":["../../../../../lts/core/generated/Shaders/vrDistortionCorrection.fragment.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAErD,IAAM,IAAI,GAAG,mCAAmC,CAAC;AACjD,IAAM,MAAM,GAAG,ynBAqBb,CAAC;AACH,aAAa;AACb,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACxC,cAAc;AACd,MAAM,CAAC,IAAM,iCAAiC,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"vrDistortionCorrectionPixelShader\";\nconst shader = `varying vec2 vUV;\runiform sampler2D textureSampler;\runiform vec2 LensCenter;\runiform vec2 Scale;\runiform vec2 ScaleIn;\runiform vec4 HmdWarpParam;\rvec2 HmdWarp(vec2 in01) {\rvec2 theta=(in01-LensCenter)*ScaleIn; \rfloat rSq=theta.x*theta.x+theta.y*theta.y;\rvec2 rvector=theta*(HmdWarpParam.x+HmdWarpParam.y*rSq+HmdWarpParam.z*rSq*rSq+HmdWarpParam.w*rSq*rSq*rSq);\rreturn LensCenter+Scale*rvector;\r}\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\rvec2 tc=HmdWarp(vUV);\rif (tc.x <0.0 || tc.x>1.0 || tc.y<0.0 || tc.y>1.0)\rgl_FragColor=vec4(0.0,0.0,0.0,0.0);\relse{\rgl_FragColor=texture2D(textureSampler,tc);\r}\r}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport const vrDistortionCorrectionPixelShader = { name, shader };\n"]}