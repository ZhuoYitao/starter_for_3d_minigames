{"version":3,"file":"depthBoxBlur.fragment.js","sourceRoot":"","sources":["../../../../../lts/core/generated/Shaders/depthBoxBlur.fragment.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAErD,IAAM,IAAI,GAAG,yBAAyB,CAAC;AACvC,IAAM,MAAM,GAAG,gXAWb,CAAC;AACH,aAAa;AACb,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACxC,cAAc;AACd,MAAM,CAAC,IAAM,uBAAuB,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"depthBoxBlurPixelShader\";\nconst shader = `varying vec2 vUV;\runiform sampler2D textureSampler;\runiform vec2 screenSize;\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\rvec4 colorDepth=vec4(0.0);\rfor (int x=-OFFSET; x<=OFFSET; x++)\rfor (int y=-OFFSET; y<=OFFSET; y++)\rcolorDepth+=texture2D(textureSampler,vUV+vec2(x,y)/screenSize);\rgl_FragColor=(colorDepth/float((OFFSET*2+1)*(OFFSET*2+1)));\r}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport const depthBoxBlurPixelShader = { name, shader };\n"]}