{"version":3,"file":"pbrBlockAlphaFresnel.js","sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlphaFresnel.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAExD,IAAM,IAAI,GAAG,sBAAsB,CAAC;AACpC,IAAM,MAAM,GAAG,62BAkCd,CAAC;AACF,aAAa;AACb,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAChD,cAAc;AACd,MAAM,CAAC,IAAM,oBAAoB,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"pbrBlockAlphaFresnel\";\nconst shader = `#ifdef ALPHAFRESNEL\n#if defined(ALPHATEST) || defined(ALPHABLEND)\nstruct alphaFresnelOutParams\r{\rfloat alpha;\r};\r#define pbr_inline\nvoid alphaFresnelBlock(\rin vec3 normalW,\rin vec3 viewDirectionW,\rin float alpha,\rin float microSurface,\rout alphaFresnelOutParams outParams\r)\r{\rfloat opacityPerceptual=alpha;\r#ifdef LINEARALPHAFRESNEL\nfloat opacity0=opacityPerceptual;\r#else\nfloat opacity0=opacityPerceptual*opacityPerceptual;\r#endif\nfloat opacity90=fresnelGrazingReflectance(opacity0);\rvec3 normalForward=faceforward(normalW,-viewDirectionW,normalW);\routParams.alpha=getReflectanceFromAnalyticalBRDFLookup_Jones(saturate(dot(viewDirectionW,normalForward)),vec3(opacity0),vec3(opacity90),sqrt(microSurface)).x;\r#ifdef ALPHATEST\nif (outParams.alpha<ALPHATESTVALUE)\rdiscard;\r#ifndef ALPHABLEND\noutParams.alpha=1.0;\r#endif\n#endif\n}\r#endif\n#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const pbrBlockAlphaFresnel = { name, shader };\n"]}