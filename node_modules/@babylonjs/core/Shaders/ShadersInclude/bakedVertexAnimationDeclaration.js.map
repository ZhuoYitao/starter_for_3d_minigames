{"version":3,"file":"bakedVertexAnimationDeclaration.js","sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/bakedVertexAnimationDeclaration.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAExD,IAAM,IAAI,GAAG,iCAAiC,CAAC;AAC/C,IAAM,MAAM,GAAG,wyBAqBd,CAAC;AACF,aAAa;AACb,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAChD,cAAc;AACd,MAAM,CAAC,IAAM,+BAA+B,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"bakedVertexAnimationDeclaration\";\nconst shader = `#ifdef BAKED_VERTEX_ANIMATION_TEXTURE\nuniform float bakedVertexAnimationTime;\runiform vec2 bakedVertexAnimationTextureSizeInverted;\runiform vec4 bakedVertexAnimationSettings;\runiform sampler2D bakedVertexAnimationTexture;\r#ifdef INSTANCES\nattribute vec4 bakedVertexAnimationSettingsInstanced;\r#endif\n#define inline\nmat4 readMatrixFromRawSamplerVAT(sampler2D smp,float index,float frame)\r{\rfloat offset=index*4.0;\rfloat frameUV=(frame+0.5)*bakedVertexAnimationTextureSizeInverted.y;\rfloat dx=bakedVertexAnimationTextureSizeInverted.x;\rvec4 m0=texture2D(smp,vec2(dx*(offset+0.5),frameUV));\rvec4 m1=texture2D(smp,vec2(dx*(offset+1.5),frameUV));\rvec4 m2=texture2D(smp,vec2(dx*(offset+2.5),frameUV));\rvec4 m3=texture2D(smp,vec2(dx*(offset+3.5),frameUV));\rreturn mat4(m0,m1,m2,m3);\r}\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const bakedVertexAnimationDeclaration = { name, shader };\n"]}