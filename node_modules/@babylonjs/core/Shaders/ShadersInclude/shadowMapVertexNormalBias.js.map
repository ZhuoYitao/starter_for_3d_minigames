{"version":3,"file":"shadowMapVertexNormalBias.js","sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/shadowMapVertexNormalBias.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAExD,IAAM,IAAI,GAAG,2BAA2B,CAAC;AACzC,IAAM,MAAM,GAAG,oZAYd,CAAC;AACF,aAAa;AACb,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAChD,cAAc;AACd,MAAM,CAAC,IAAM,yBAAyB,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"shadowMapVertexNormalBias\";\nconst shader = `#if SM_NORMALBIAS==1\n#if SM_DIRECTIONINLIGHTDATA==1\nvec3 worldLightDirSM=normalize(-lightDataSM.xyz);\r#else\nvec3 directionToLightSM=lightDataSM.xyz-worldPos.xyz;\rvec3 worldLightDirSM=normalize(directionToLightSM);\r#endif\nfloat ndlSM=dot(vNormalW,worldLightDirSM);\rfloat sinNLSM=sqrt(1.0-ndlSM*ndlSM);\rfloat normalBiasSM=biasAndScaleSM.y*sinNLSM;\rworldPos.xyz-=vNormalW*normalBiasSM;\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const shadowMapVertexNormalBias = { name, shader };\n"]}