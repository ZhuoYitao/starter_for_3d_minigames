{"version":3,"file":"pbrBlockReflection.js","sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflection.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAExD,IAAM,IAAI,GAAG,oBAAoB,CAAC;AAClC,IAAM,MAAM,GAAG,gqOA2Qd,CAAC;AACF,aAAa;AACb,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAChD,cAAc;AACd,MAAM,CAAC,IAAM,kBAAkB,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"pbrBlockReflection\";\nconst shader = `#ifdef REFLECTION\nstruct reflectionOutParams\r{\rvec4 environmentRadiance;\rvec3 environmentIrradiance;\r#ifdef REFLECTIONMAP_3D\nvec3 reflectionCoords;\r#else\nvec2 reflectionCoords;\r#endif\n#ifdef SS_TRANSLUCENCY\n#ifdef USESPHERICALFROMREFLECTIONMAP\n#if !defined(NORMAL) || !defined(USESPHERICALINVERTEX)\nvec3 irradianceVector;\r#endif\n#endif\n#endif\n};\r#define pbr_inline\nvoid createReflectionCoords(\rin vec3 vPositionW,\rin vec3 normalW,\r#ifdef ANISOTROPIC\nin anisotropicOutParams anisotropicOut,\r#endif\n#ifdef REFLECTIONMAP_3D\nout vec3 reflectionCoords\r#else\nout vec2 reflectionCoords\r#endif\n)\r{\r#ifdef ANISOTROPIC\nvec3 reflectionVector=computeReflectionCoords(vec4(vPositionW,1.0),anisotropicOut.anisotropicNormal);\r#else\nvec3 reflectionVector=computeReflectionCoords(vec4(vPositionW,1.0),normalW);\r#endif\n#ifdef REFLECTIONMAP_OPPOSITEZ\nreflectionVector.z*=-1.0;\r#endif\n#ifdef REFLECTIONMAP_3D\nreflectionCoords=reflectionVector;\r#else\nreflectionCoords=reflectionVector.xy;\r#ifdef REFLECTIONMAP_PROJECTION\nreflectionCoords/=reflectionVector.z;\r#endif\nreflectionCoords.y=1.0-reflectionCoords.y;\r#endif\n}\r#define pbr_inline\n#define inline\nvoid sampleReflectionTexture(\rin float alphaG,\rin vec3 vReflectionMicrosurfaceInfos,\rin vec2 vReflectionInfos,\rin vec3 vReflectionColor,\r#if defined(LODINREFLECTIONALPHA) && !defined(REFLECTIONMAP_SKYBOX)\nin float NdotVUnclamped,\r#endif\n#ifdef LINEARSPECULARREFLECTION\nin float roughness,\r#endif\n#ifdef REFLECTIONMAP_3D\nin samplerCube reflectionSampler,\rconst vec3 reflectionCoords,\r#else\nin sampler2D reflectionSampler,\rconst vec2 reflectionCoords,\r#endif\n#ifndef LODBASEDMICROSFURACE\n#ifdef REFLECTIONMAP_3D\nin samplerCube reflectionSamplerLow,\rin samplerCube reflectionSamplerHigh,\r#else\nin sampler2D reflectionSamplerLow,\rin sampler2D reflectionSamplerHigh,\r#endif\n#endif\n#ifdef REALTIME_FILTERING\nin vec2 vReflectionFilteringInfo,\r#endif\nout vec4 environmentRadiance\r)\r{\r#if defined(LODINREFLECTIONALPHA) && !defined(REFLECTIONMAP_SKYBOX)\nfloat reflectionLOD=getLodFromAlphaG(vReflectionMicrosurfaceInfos.x,alphaG,NdotVUnclamped);\r#elif defined(LINEARSPECULARREFLECTION)\nfloat reflectionLOD=getLinearLodFromRoughness(vReflectionMicrosurfaceInfos.x,roughness);\r#else\nfloat reflectionLOD=getLodFromAlphaG(vReflectionMicrosurfaceInfos.x,alphaG);\r#endif\n#ifdef LODBASEDMICROSFURACE\nreflectionLOD=reflectionLOD*vReflectionMicrosurfaceInfos.y+vReflectionMicrosurfaceInfos.z;\r#ifdef LODINREFLECTIONALPHA\nfloat automaticReflectionLOD=UNPACK_LOD(sampleReflection(reflectionSampler,reflectionCoords).a);\rfloat requestedReflectionLOD=max(automaticReflectionLOD,reflectionLOD);\r#else\nfloat requestedReflectionLOD=reflectionLOD;\r#endif\n#ifdef REALTIME_FILTERING\nenvironmentRadiance=vec4(radiance(alphaG,reflectionSampler,reflectionCoords,vReflectionFilteringInfo),1.0);\r#else\nenvironmentRadiance=sampleReflectionLod(reflectionSampler,reflectionCoords,reflectionLOD);\r#endif\n#else\nfloat lodReflectionNormalized=saturate(reflectionLOD/log2(vReflectionMicrosurfaceInfos.x));\rfloat lodReflectionNormalizedDoubled=lodReflectionNormalized*2.0;\rvec4 environmentMid=sampleReflection(reflectionSampler,reflectionCoords);\rif (lodReflectionNormalizedDoubled<1.0){\renvironmentRadiance=mix(\rsampleReflection(reflectionSamplerHigh,reflectionCoords),\renvironmentMid,\rlodReflectionNormalizedDoubled\r);\r} else {\renvironmentRadiance=mix(\renvironmentMid,\rsampleReflection(reflectionSamplerLow,reflectionCoords),\rlodReflectionNormalizedDoubled-1.0\r);\r}\r#endif\n#ifdef RGBDREFLECTION\nenvironmentRadiance.rgb=fromRGBD(environmentRadiance);\r#endif\n#ifdef GAMMAREFLECTION\nenvironmentRadiance.rgb=toLinearSpace(environmentRadiance.rgb);\r#endif\nenvironmentRadiance.rgb*=vReflectionInfos.x;\renvironmentRadiance.rgb*=vReflectionColor.rgb;\r}\r#define pbr_inline\n#define inline\nvoid reflectionBlock(\rin vec3 vPositionW,\rin vec3 normalW,\rin float alphaG,\rin vec3 vReflectionMicrosurfaceInfos,\rin vec2 vReflectionInfos,\rin vec3 vReflectionColor,\r#ifdef ANISOTROPIC\nin anisotropicOutParams anisotropicOut,\r#endif\n#if defined(LODINREFLECTIONALPHA) && !defined(REFLECTIONMAP_SKYBOX)\nin float NdotVUnclamped,\r#endif\n#ifdef LINEARSPECULARREFLECTION\nin float roughness,\r#endif\n#ifdef REFLECTIONMAP_3D\nin samplerCube reflectionSampler,\r#else\nin sampler2D reflectionSampler,\r#endif\n#if defined(NORMAL) && defined(USESPHERICALINVERTEX)\nin vec3 vEnvironmentIrradiance,\r#endif\n#ifdef USESPHERICALFROMREFLECTIONMAP\n#if !defined(NORMAL) || !defined(USESPHERICALINVERTEX)\nin mat4 reflectionMatrix,\r#endif\n#endif\n#ifdef USEIRRADIANCEMAP\n#ifdef REFLECTIONMAP_3D\nin samplerCube irradianceSampler,\r#else\nin sampler2D irradianceSampler,\r#endif\n#endif\n#ifndef LODBASEDMICROSFURACE\n#ifdef REFLECTIONMAP_3D\nin samplerCube reflectionSamplerLow,\rin samplerCube reflectionSamplerHigh,\r#else\nin sampler2D reflectionSamplerLow,\rin sampler2D reflectionSamplerHigh,\r#endif\n#endif\n#ifdef REALTIME_FILTERING\nin vec2 vReflectionFilteringInfo,\r#endif\nout reflectionOutParams outParams\r)\r{\rvec4 environmentRadiance=vec4(0.,0.,0.,0.);\r#ifdef REFLECTIONMAP_3D\nvec3 reflectionCoords=vec3(0.);\r#else\nvec2 reflectionCoords=vec2(0.);\r#endif\ncreateReflectionCoords(\rvPositionW,\rnormalW,\r#ifdef ANISOTROPIC\nanisotropicOut,\r#endif\nreflectionCoords\r);\rsampleReflectionTexture(\ralphaG,\rvReflectionMicrosurfaceInfos,\rvReflectionInfos,\rvReflectionColor,\r#if defined(LODINREFLECTIONALPHA) && !defined(REFLECTIONMAP_SKYBOX)\nNdotVUnclamped,\r#endif\n#ifdef LINEARSPECULARREFLECTION\nroughness,\r#endif\n#ifdef REFLECTIONMAP_3D\nreflectionSampler,\rreflectionCoords,\r#else\nreflectionSampler,\rreflectionCoords,\r#endif\n#ifndef LODBASEDMICROSFURACE\nreflectionSamplerLow,\rreflectionSamplerHigh,\r#endif\n#ifdef REALTIME_FILTERING\nvReflectionFilteringInfo,\r#endif\nenvironmentRadiance\r);\rvec3 environmentIrradiance=vec3(0.,0.,0.);\r#ifdef USESPHERICALFROMREFLECTIONMAP\n#if defined(NORMAL) && defined(USESPHERICALINVERTEX)\nenvironmentIrradiance=vEnvironmentIrradiance;\r#else\n#ifdef ANISOTROPIC\nvec3 irradianceVector=vec3(reflectionMatrix*vec4(anisotropicOut.anisotropicNormal,0)).xyz;\r#else\nvec3 irradianceVector=vec3(reflectionMatrix*vec4(normalW,0)).xyz;\r#endif\n#ifdef REFLECTIONMAP_OPPOSITEZ\nirradianceVector.z*=-1.0;\r#endif\n#ifdef INVERTCUBICMAP\nirradianceVector.y*=-1.0;\r#endif\n#if defined(REALTIME_FILTERING)\nenvironmentIrradiance=irradiance(reflectionSampler,irradianceVector,vReflectionFilteringInfo);\r#else\nenvironmentIrradiance=computeEnvironmentIrradiance(irradianceVector);\r#endif\n#ifdef SS_TRANSLUCENCY\noutParams.irradianceVector=irradianceVector;\r#endif\n#endif\n#elif defined(USEIRRADIANCEMAP)\nvec4 environmentIrradiance4=sampleReflection(irradianceSampler,reflectionCoords);\renvironmentIrradiance=environmentIrradiance4.rgb;\r#ifdef RGBDREFLECTION\nenvironmentIrradiance.rgb=fromRGBD(environmentIrradiance4);\r#endif\n#ifdef GAMMAREFLECTION\nenvironmentIrradiance.rgb=toLinearSpace(environmentIrradiance.rgb);\r#endif\n#endif\nenvironmentIrradiance*=vReflectionColor.rgb;\routParams.environmentRadiance=environmentRadiance;\routParams.environmentIrradiance=environmentIrradiance;\routParams.reflectionCoords=reflectionCoords;\r}\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const pbrBlockReflection = { name, shader };\n"]}