{"version":3,"file":"fibonacci.js","sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/fibonacci.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAExD,IAAM,IAAI,GAAG,WAAW,CAAC;AACzB,IAAM,MAAM,GAAG,qUAWb,CAAC;AACH,aAAa;AACb,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAChD,cAAc;AACd,MAAM,CAAC,IAAM,SAAS,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"fibonacci\";\nconst shader = `#define rcp(x) 1./x\n#define GOLDEN_RATIO 1.618033988749895\n#define TWO_PI 6.2831855\nvec2 Golden2dSeq(int i,float n)\r{\rreturn vec2(float(i)/n+(0.5/n),fract(float(i)*rcp(GOLDEN_RATIO)));\r}\rvec2 SampleDiskGolden(int i,int sampleCount)\r{\rvec2 f=Golden2dSeq(i,float(sampleCount));\rreturn vec2(sqrt(f.x),TWO_PI*f.y);\r}`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const fibonacci = { name, shader };\n"]}