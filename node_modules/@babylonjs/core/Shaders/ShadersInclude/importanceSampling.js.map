{"version":3,"file":"importanceSampling.js","sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/importanceSampling.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAExD,IAAM,IAAI,GAAG,oBAAoB,CAAC;AAClC,IAAM,MAAM,GAAG,+rBAmBb,CAAC;AACH,aAAa;AACb,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAChD,cAAc;AACd,MAAM,CAAC,IAAM,kBAAkB,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"importanceSampling\";\nconst shader = `vec3 hemisphereCosSample(vec2 u) {\rfloat phi=2.*PI*u.x;\rfloat cosTheta2=1.-u.y;\rfloat cosTheta=sqrt(cosTheta2);\rfloat sinTheta=sqrt(1.-cosTheta2);\rreturn vec3(sinTheta*cos(phi),sinTheta*sin(phi),cosTheta);\r}\rvec3 hemisphereImportanceSampleDggx(vec2 u,float a) {\rfloat phi=2.*PI*u.x;\rfloat cosTheta2=(1.-u.y)/(1.+(a+1.)*((a-1.)*u.y));\rfloat cosTheta=sqrt(cosTheta2);\rfloat sinTheta=sqrt(1.-cosTheta2);\rreturn vec3(sinTheta*cos(phi),sinTheta*sin(phi),cosTheta);\r}\rvec3 hemisphereImportanceSampleDCharlie(vec2 u,float a) { \rfloat phi=2.*PI*u.x;\rfloat sinTheta=pow(u.y,a/(2.*a+1.));\rfloat cosTheta=sqrt(1.-sinTheta*sinTheta);\rreturn vec3(sinTheta*cos(phi),sinTheta*sin(phi),cosTheta);\r}`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const importanceSampling = { name, shader };\n"]}