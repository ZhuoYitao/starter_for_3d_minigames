{"version":3,"file":"pbrDirectLightingSetupFunctions.js","sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingSetupFunctions.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAExD,IAAM,IAAI,GAAG,iCAAiC,CAAC;AAC/C,IAAM,MAAM,GAAG,8gDAkDb,CAAC;AACH,aAAa;AACb,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAChD,cAAc;AACd,MAAM,CAAC,IAAM,+BAA+B,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"pbrDirectLightingSetupFunctions\";\nconst shader = `struct preLightingInfo\r{\rvec3 lightOffset;\rfloat lightDistanceSquared;\rfloat lightDistance;\rfloat attenuation;\rvec3 L;\rvec3 H;\rfloat NdotV;\rfloat NdotLUnclamped;\rfloat NdotL;\rfloat VdotH;\rfloat roughness;\r#ifdef IRIDESCENCE\nfloat iridescenceIntensity;\r#endif\n};\rpreLightingInfo computePointAndSpotPreLightingInfo(vec4 lightData,vec3 V,vec3 N) {\rpreLightingInfo result;\rresult.lightOffset=lightData.xyz-vPositionW;\rresult.lightDistanceSquared=dot(result.lightOffset,result.lightOffset);\rresult.lightDistance=sqrt(result.lightDistanceSquared);\rresult.L=normalize(result.lightOffset);\rresult.H=normalize(V+result.L);\rresult.VdotH=saturate(dot(V,result.H));\rresult.NdotLUnclamped=dot(N,result.L);\rresult.NdotL=saturateEps(result.NdotLUnclamped);\rreturn result;\r}\rpreLightingInfo computeDirectionalPreLightingInfo(vec4 lightData,vec3 V,vec3 N) {\rpreLightingInfo result;\rresult.lightDistance=length(-lightData.xyz);\rresult.L=normalize(-lightData.xyz);\rresult.H=normalize(V+result.L);\rresult.VdotH=saturate(dot(V,result.H));\rresult.NdotLUnclamped=dot(N,result.L);\rresult.NdotL=saturateEps(result.NdotLUnclamped);\rreturn result;\r}\rpreLightingInfo computeHemisphericPreLightingInfo(vec4 lightData,vec3 V,vec3 N) {\rpreLightingInfo result;\rresult.NdotL=dot(N,lightData.xyz)*0.5+0.5;\rresult.NdotL=saturateEps(result.NdotL);\rresult.NdotLUnclamped=result.NdotL;\r#ifdef SPECULARTERM\nresult.L=normalize(lightData.xyz);\rresult.H=normalize(V+result.L);\rresult.VdotH=saturate(dot(V,result.H));\r#endif\nreturn result;\r}`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const pbrDirectLightingSetupFunctions = { name, shader };\n"]}