{"version":3,"file":"bonesDeclaration.js","sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/bonesDeclaration.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAExD,IAAM,IAAI,GAAG,kBAAkB,CAAC;AAChC,IAAM,MAAM,GAAG,42BAgCd,CAAC;AACF,aAAa;AACb,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAChD,cAAc;AACd,MAAM,CAAC,IAAM,gBAAgB,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"bonesDeclaration\";\nconst shader = `#if NUM_BONE_INFLUENCERS>0\nattribute vec4 matricesIndices;\rattribute vec4 matricesWeights;\r#if NUM_BONE_INFLUENCERS>4\nattribute vec4 matricesIndicesExtra;\rattribute vec4 matricesWeightsExtra;\r#endif\n#ifndef BAKED_VERTEX_ANIMATION_TEXTURE\n#ifdef BONETEXTURE\nuniform sampler2D boneSampler;\runiform float boneTextureWidth;\r#else\nuniform mat4 mBones[BonesPerMesh];\r#ifdef BONES_VELOCITY_ENABLED\nuniform mat4 mPreviousBones[BonesPerMesh];\r#endif\n#endif\n#ifdef BONETEXTURE\n#define inline\nmat4 readMatrixFromRawSampler(sampler2D smp,float index)\r{\rfloat offset=index *4.0;\rfloat dx=1.0/boneTextureWidth;\rvec4 m0=texture2D(smp,vec2(dx*(offset+0.5),0.));\rvec4 m1=texture2D(smp,vec2(dx*(offset+1.5),0.));\rvec4 m2=texture2D(smp,vec2(dx*(offset+2.5),0.));\rvec4 m3=texture2D(smp,vec2(dx*(offset+3.5),0.));\rreturn mat4(m0,m1,m2,m3);\r}\r#endif\n#endif\n#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const bonesDeclaration = { name, shader };\n"]}