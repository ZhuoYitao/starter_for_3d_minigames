{"version":3,"file":"bakedVertexAnimation.js","sourceRoot":"","sources":["../../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bakedVertexAnimation.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAExD,IAAM,IAAI,GAAG,sBAAsB,CAAC;AACpC,IAAM,MAAM,GAAG,64EA+Cd,CAAC;AACF,aAAa;AACb,WAAW,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACpD,cAAc;AACd,MAAM,CAAC,IAAM,oBAAoB,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"bakedVertexAnimation\";\nconst shader = `#ifdef BAKED_VERTEX_ANIMATION_TEXTURE\n{\r#ifdef INSTANCES\nlet VATStartFrame: f32=bakedVertexAnimationSettingsInstanced.x;\rlet VATEndFrame: f32=bakedVertexAnimationSettingsInstanced.y;\rlet VATOffsetFrame: f32=bakedVertexAnimationSettingsInstanced.z;\rlet VATSpeed: f32=bakedVertexAnimationSettingsInstanced.w;\r#else\nlet VATStartFrame: f32=uniforms.bakedVertexAnimationSettings.x;\rlet VATEndFrame: f32=uniforms.bakedVertexAnimationSettings.y;\rlet VATOffsetFrame: f32=uniforms.bakedVertexAnimationSettings.z;\rlet VATSpeed: f32=uniforms.bakedVertexAnimationSettings.w;\r#endif\nlet totalFrames: f32=VATEndFrame-VATStartFrame+1.0;\rlet time: f32=uniforms.bakedVertexAnimationTime*VATSpeed/totalFrames;\rlet frameCorrection: f32=select(1.0,0.0,time<1.0);\rlet numOfFrames: f32=totalFrames-frameCorrection;\rvar VATFrameNum: f32=fract(time)*numOfFrames;\rVATFrameNum=(VATFrameNum+VATOffsetFrame) % numOfFrames;\rVATFrameNum=floor(VATFrameNum);\rVATFrameNum=VATFrameNum+VATStartFrame+frameCorrection;\rvar VATInfluence : mat4x4<f32>;\rVATInfluence=readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndices[0],VATFrameNum)*matricesWeights[0];\r#if NUM_BONE_INFLUENCERS>1\nVATInfluence=VATInfluence+readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndices[1],VATFrameNum)*matricesWeights[1];\r#endif\n#if NUM_BONE_INFLUENCERS>2\nVATInfluence=VATInfluence+readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndices[2],VATFrameNum)*matricesWeights[2];\r#endif\n#if NUM_BONE_INFLUENCERS>3\nVATInfluence=VATInfluence+readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndices[3],VATFrameNum)*matricesWeights[3];\r#endif\n#if NUM_BONE_INFLUENCERS>4\nVATInfluence=VATInfluence+readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndicesExtra[0],VATFrameNum)*matricesWeightsExtra[0];\r#endif\n#if NUM_BONE_INFLUENCERS>5\nVATInfluence=VATInfluence+readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndicesExtra[1],VATFrameNum)*matricesWeightsExtra[1];\r#endif\n#if NUM_BONE_INFLUENCERS>6\nVATInfluence=VATInfluence+readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndicesExtra[2],VATFrameNum)*matricesWeightsExtra[2];\r#endif\n#if NUM_BONE_INFLUENCERS>7\nVATInfluence=VATInfluence+readMatrixFromRawSamplerVAT(bakedVertexAnimationTexture,matricesIndicesExtra[3],VATFrameNum)*matricesWeightsExtra[3];\r#endif\nfinalWorld=finalWorld*VATInfluence;\r}\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @hidden */\nexport const bakedVertexAnimation = { name, shader };\n"]}