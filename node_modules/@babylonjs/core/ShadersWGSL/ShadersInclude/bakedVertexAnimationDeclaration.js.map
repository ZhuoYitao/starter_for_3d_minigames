{"version":3,"file":"bakedVertexAnimationDeclaration.js","sourceRoot":"","sources":["../../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bakedVertexAnimationDeclaration.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAExD,IAAM,IAAI,GAAG,iCAAiC,CAAC;AAC/C,IAAM,MAAM,GAAG,2uBAmBd,CAAC;AACF,aAAa;AACb,WAAW,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACpD,cAAc;AACd,MAAM,CAAC,IAAM,+BAA+B,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"bakedVertexAnimationDeclaration\";\nconst shader = `#ifdef BAKED_VERTEX_ANIMATION_TEXTURE\nuniform bakedVertexAnimationTime: f32;\runiform bakedVertexAnimationTextureSizeInverted: vec2<f32>;\runiform bakedVertexAnimationSettings: vec4<f32>;\rvar bakedVertexAnimationTexture : texture_2d<f32>;\r#ifdef INSTANCES\nattribute bakedVertexAnimationSettingsInstanced : vec4<f32>;\r#endif\nfn readMatrixFromRawSamplerVAT(smp : texture_2d<f32>,index : f32,frame : f32)->mat4x4<f32>\r{\rlet offset=i32(index)*4;\rlet frameUV=i32(frame);\rlet m0=textureLoad(smp,vec2<i32>(offset+0,frameUV),0);\rlet m1=textureLoad(smp,vec2<i32>(offset+1,frameUV),0);\rlet m2=textureLoad(smp,vec2<i32>(offset+2,frameUV),0);\rlet m3=textureLoad(smp,vec2<i32>(offset+3,frameUV),0);\rreturn mat4x4<f32>(m0,m1,m2,m3);\r}\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @hidden */\nexport const bakedVertexAnimationDeclaration = { name, shader };\n"]}