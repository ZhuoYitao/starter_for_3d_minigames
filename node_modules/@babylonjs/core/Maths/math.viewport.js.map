{"version":3,"file":"math.viewport.js","sourceRoot":"","sources":["../../../../../lts/core/generated/Maths/math.viewport.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH;IACI;;;;;;OAMG;IACH;IACI,+BAA+B;IACxB,CAAS;IAChB,8BAA8B;IACvB,CAAS;IAChB,oBAAoB;IACb,KAAa;IACpB,sBAAsB;IACf,MAAc;QANd,MAAC,GAAD,CAAC,CAAQ;QAET,MAAC,GAAD,CAAC,CAAQ;QAET,UAAK,GAAL,KAAK,CAAQ;QAEb,WAAM,GAAN,MAAM,CAAQ;IACtB,CAAC;IAEJ;;;;;OAKG;IACI,2BAAQ,GAAf,UAAgB,WAAmB,EAAE,YAAoB;QACrD,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,WAAW,EAAE,IAAI,CAAC,CAAC,GAAG,YAAY,EAAE,IAAI,CAAC,KAAK,GAAG,WAAW,EAAE,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC;IAC3H,CAAC;IAED;;;;;;OAMG;IACI,gCAAa,GAApB,UAAqB,WAAmB,EAAE,YAAoB,EAAE,GAAa;QACzE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC;QAC7B,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC;QAC9B,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;QACrC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;QACxC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACI,wBAAK,GAAZ;QACI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACjE,CAAC;IACL,eAAC;AAAD,CAAC,AAnDD,IAmDC","sourcesContent":["/**\r\n * Class used to represent a viewport on screen\r\n */\r\nexport class Viewport {\r\n    /**\r\n     * Creates a Viewport object located at (x, y) and sized (width, height)\r\n     * @param x defines viewport left coordinate\r\n     * @param y defines viewport top coordinate\r\n     * @param width defines the viewport width\r\n     * @param height defines the viewport height\r\n     */\r\n    constructor(\r\n        /** viewport left coordinate */\r\n        public x: number,\r\n        /** viewport top coordinate */\r\n        public y: number,\r\n        /**viewport width */\r\n        public width: number,\r\n        /** viewport height */\r\n        public height: number\r\n    ) {}\r\n\r\n    /**\r\n     * Creates a new viewport using absolute sizing (from 0-> width, 0-> height instead of 0->1)\r\n     * @param renderWidth defines the rendering width\r\n     * @param renderHeight defines the rendering height\r\n     * @returns a new Viewport\r\n     */\r\n    public toGlobal(renderWidth: number, renderHeight: number): Viewport {\r\n        return new Viewport(this.x * renderWidth, this.y * renderHeight, this.width * renderWidth, this.height * renderHeight);\r\n    }\r\n\r\n    /**\r\n     * Stores absolute viewport value into a target viewport (from 0-> width, 0-> height instead of 0->1)\r\n     * @param renderWidth defines the rendering width\r\n     * @param renderHeight defines the rendering height\r\n     * @param ref defines the target viewport\r\n     * @returns the current viewport\r\n     */\r\n    public toGlobalToRef(renderWidth: number, renderHeight: number, ref: Viewport): Viewport {\r\n        ref.x = this.x * renderWidth;\r\n        ref.y = this.y * renderHeight;\r\n        ref.width = this.width * renderWidth;\r\n        ref.height = this.height * renderHeight;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns a new Viewport copied from the current one\r\n     * @returns a new Viewport\r\n     */\r\n    public clone(): Viewport {\r\n        return new Viewport(this.x, this.y, this.width, this.height);\r\n    }\r\n}\r\n"]}