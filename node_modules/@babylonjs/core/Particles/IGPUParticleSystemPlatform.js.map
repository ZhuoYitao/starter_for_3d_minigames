{"version":3,"file":"IGPUParticleSystemPlatform.js","sourceRoot":"","sources":["../../../../../lts/core/generated/Particles/IGPUParticleSystemPlatform.ts"],"names":[],"mappings":"","sourcesContent":["import type { Buffer, VertexBuffer } from \"../Buffers/buffer\";\r\n\r\nimport type { DataBuffer } from \"../Buffers/dataBuffer\";\r\nimport type { Effect } from \"../Materials/effect\";\r\nimport type { UniformBufferEffectCommonAccessor } from \"../Materials/uniformBufferEffectCommonAccessor\";\r\nimport type { DataArray } from \"../types\";\r\n\r\n/** @hidden */\r\nexport interface IGPUParticleSystemPlatform {\r\n    alignDataInBuffer: boolean;\r\n\r\n    isUpdateBufferCreated: () => boolean;\r\n    isUpdateBufferReady: () => boolean;\r\n\r\n    createUpdateBuffer: (defines: string) => UniformBufferEffectCommonAccessor;\r\n    createVertexBuffers: (updateBuffer: Buffer, renderVertexBuffers: { [key: string]: VertexBuffer }) => void;\r\n    createParticleBuffer: (data: number[]) => DataArray | DataBuffer;\r\n\r\n    bindDrawBuffers: (index: number, effect: Effect) => void;\r\n\r\n    preUpdateParticleBuffer: () => void;\r\n    updateParticleBuffer: (index: number, targetBuffer: Buffer, currentActiveCount: number) => void;\r\n\r\n    releaseBuffers: () => void;\r\n    releaseVertexBuffers: () => void;\r\n}\r\n"]}