{"version":3,"file":"materialPluginFactoryExport.js","sourceRoot":"","sources":["../../../../../lts/core/generated/Materials/materialPluginFactoryExport.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,sBAAsB,EAAE,MAAM,mCAAmC,CAAC;AAE3E,OAAO,EAAE,2BAA2B,EAAE,MAAM,mCAAmC,CAAC;AAChF,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AACxD,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAClE,OAAO,EAAE,yBAAyB,EAAE,MAAM,iCAAiC,CAAC;AAC5E,OAAO,EAAE,2BAA2B,EAAE,MAAM,mCAAmC,CAAC;AAChF,OAAO,EAAE,qBAAqB,EAAE,MAAM,6BAA6B,CAAC;AACpE,OAAO,EAAE,0BAA0B,EAAE,MAAM,kCAAkC,CAAC;AAC9E,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAItD;;;;GAIG;AACH,MAAM,UAAU,0BAA0B,CAAC,QAAkB;IACzD,IAAI,QAAQ,YAAY,eAAe,EAAE;QACrC,OAAO,IAAI,2BAA2B,CAAC,QAAQ,CAAC,CAAC;KACpD;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,mBAAmB,CAAC,QAAkB;IAClD,IAAI,QAAQ,YAAY,eAAe,EAAE;QACrC,OAAO,IAAI,oBAAoB,CAAC,QAAQ,CAAC,CAAC;KAC7C;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,wBAAwB,CAAC,QAAkB;IACvD,IAAI,QAAQ,YAAY,eAAe,EAAE;QACrC,OAAO,IAAI,yBAAyB,CAAC,QAAQ,CAAC,CAAC;KAClD;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,0BAA0B,CAAC,QAAkB;IACzD,IAAI,QAAQ,YAAY,eAAe,EAAE;QACrC,OAAO,IAAI,2BAA2B,CAAC,QAAQ,CAAC,CAAC;KACpD;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,oBAAoB,CAAC,QAAkB;IACnD,IAAI,QAAQ,YAAY,eAAe,EAAE;QACrC,OAAO,IAAI,qBAAqB,CAAC,QAAQ,CAAC,CAAC;KAC9C;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,yBAAyB,CAAC,QAAkB;IACxD,IAAI,QAAQ,YAAY,eAAe,EAAE;QACrC,OAAO,IAAI,0BAA0B,CAAC,QAAQ,CAAC,CAAC;KACnD;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,qBAAqB,CAAC,QAAkB;IACpD,IAAI,QAAQ,YAAY,eAAe,IAAI,QAAQ,YAAY,gBAAgB,EAAE;QAC7E,OAAO,IAAI,sBAAsB,CAAC,QAAQ,CAAC,CAAC;KAC/C;IACD,OAAO,IAAI,CAAC;AAChB,CAAC","sourcesContent":["import type { Nullable } from \"../types\";\r\nimport { DetailMapConfiguration } from \"./material.detailMapConfiguration\";\r\nimport type { MaterialPluginBase } from \"./materialPluginBase\";\r\nimport { PBRAnisotropicConfiguration } from \"./PBR/pbrAnisotropicConfiguration\";\r\nimport { PBRBaseMaterial } from \"./PBR/pbrBaseMaterial\";\r\nimport { PBRBRDFConfiguration } from \"./PBR/pbrBRDFConfiguration\";\r\nimport { PBRClearCoatConfiguration } from \"./PBR/pbrClearCoatConfiguration\";\r\nimport { PBRIridescenceConfiguration } from \"./PBR/pbrIridescenceConfiguration\";\r\nimport { PBRSheenConfiguration } from \"./PBR/pbrSheenConfiguration\";\r\nimport { PBRSubSurfaceConfiguration } from \"./PBR/pbrSubSurfaceConfiguration\";\r\nimport { StandardMaterial } from \"./standardMaterial\";\r\n\r\ndeclare type Material = import(\"./material\").Material;\r\n\r\n/**\r\n * Creates an instance of the anisotropic plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRAnisotropicPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRAnisotropicConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the brdf plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRBRDFPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRBRDFConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the clear coat plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRClearCoatPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRClearCoatConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the iridescence plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRIridescencePlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRIridescenceConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the sheen plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRSheenPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRSheenConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the sub surface plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRSubSurfacePlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRSubSurfaceConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the detail map plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createDetailMapPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial || material instanceof StandardMaterial) {\r\n        return new DetailMapConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n"]}