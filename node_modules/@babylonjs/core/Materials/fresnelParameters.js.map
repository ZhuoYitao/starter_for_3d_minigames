{"version":3,"file":"fresnelParameters.js","sourceRoot":"","sources":["../../../../../lts/core/generated/Materials/fresnelParameters.ts"],"names":[],"mappings":"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","sourcesContent":["import { DeepCopier } from \"../Misc/deepCopier\";\r\nimport type { DeepImmutable } from \"../types\";\r\nimport { Color3 } from \"../Maths/math.color\";\r\nimport { Engine } from \"../Engines/engine\";\r\nimport { SerializationHelper } from \"../Misc/decorators\";\r\nimport { Constants } from \"../Engines/constants\";\r\n\r\n/**\r\n * Options to be used when creating a FresnelParameters.\r\n */\r\nexport type IFresnelParametersCreationOptions = {\r\n    /**\r\n     * Define the color used on edges (grazing angle)\r\n     */\r\n    leftColor?: Color3;\r\n\r\n    /**\r\n     * Define the color used on center\r\n     */\r\n    rightColor?: Color3;\r\n\r\n    /**\r\n     * Define bias applied to computed fresnel term\r\n     */\r\n    bias?: number;\r\n\r\n    /**\r\n     * Defined the power exponent applied to fresnel term\r\n     */\r\n    power?: number;\r\n\r\n    /**\r\n     * Define if the fresnel effect is enable or not.\r\n     */\r\n    isEnabled?: boolean;\r\n};\r\n\r\n/**\r\n * Serialized format for FresnelParameters.\r\n */\r\nexport type IFresnelParametersSerialized = {\r\n    /**\r\n     * Define the color used on edges (grazing angle) [as an array]\r\n     */\r\n    leftColor: number[];\r\n\r\n    /**\r\n     * Define the color used on center [as an array]\r\n     */\r\n    rightColor: number[];\r\n\r\n    /**\r\n     * Define bias applied to computed fresnel term\r\n     */\r\n    bias: number;\r\n\r\n    /**\r\n     * Defined the power exponent applied to fresnel term\r\n     */\r\n    power?: number;\r\n\r\n    /**\r\n     * Define if the fresnel effect is enable or not.\r\n     */\r\n    isEnabled: boolean;\r\n};\r\n\r\n/**\r\n * This represents all the required information to add a fresnel effect on a material:\r\n * @see https://doc.babylonjs.com/divingDeeper/materials/using/fresnelParameters\r\n */\r\nexport class FresnelParameters {\r\n    private _isEnabled = true;\r\n    /**\r\n     * Define if the fresnel effect is enable or not.\r\n     */\r\n    public get isEnabled(): boolean {\r\n        return this._isEnabled;\r\n    }\r\n    public set isEnabled(value: boolean) {\r\n        if (this._isEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._isEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_FresnelDirtyFlag | Constants.MATERIAL_MiscDirtyFlag);\r\n    }\r\n\r\n    /**\r\n     * Define the color used on edges (grazing angle)\r\n     */\r\n    public leftColor: Color3;\r\n\r\n    /**\r\n     * Define the color used on center\r\n     */\r\n    public rightColor: Color3;\r\n\r\n    /**\r\n     * Define bias applied to computed fresnel term\r\n     */\r\n    public bias: number;\r\n\r\n    /**\r\n     * Defined the power exponent applied to fresnel term\r\n     */\r\n    public power: number;\r\n\r\n    /**\r\n     * Creates a new FresnelParameters object.\r\n     *\r\n     * @param options provide your own settings to optionally to override defaults\r\n     */\r\n    public constructor(options: IFresnelParametersCreationOptions = {}) {\r\n        this.bias = options.bias === undefined ? 0 : options.bias;\r\n        this.power = options.power === undefined ? 1 : options.power;\r\n        this.leftColor = options.leftColor || Color3.White();\r\n        this.rightColor = options.rightColor || Color3.Black();\r\n        if (options.isEnabled === false) {\r\n            this.isEnabled = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clones the current fresnel and its values\r\n     * @returns a clone fresnel configuration\r\n     */\r\n    public clone(): FresnelParameters {\r\n        const newFresnelParameters = new FresnelParameters();\r\n\r\n        DeepCopier.DeepCopy(this, newFresnelParameters);\r\n\r\n        return newFresnelParameters;\r\n    }\r\n\r\n    /**\r\n     * Determines equality between FresnelParameters objects\r\n     * @param otherFresnelParameters defines the second operand\r\n     * @returns true if the power, bias, leftColor, rightColor and isEnabled values are equal to the given ones\r\n     */\r\n    public equals(otherFresnelParameters: DeepImmutable<FresnelParameters>): boolean {\r\n        return (\r\n            otherFresnelParameters &&\r\n            this.bias === otherFresnelParameters.bias &&\r\n            this.power === otherFresnelParameters.power &&\r\n            this.leftColor.equals(otherFresnelParameters.leftColor) &&\r\n            this.rightColor.equals(otherFresnelParameters.rightColor) &&\r\n            this.isEnabled === otherFresnelParameters.isEnabled\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Serializes the current fresnel parameters to a JSON representation.\r\n     * @return the JSON serialization\r\n     */\r\n    public serialize(): IFresnelParametersSerialized {\r\n        return {\r\n            isEnabled: this.isEnabled,\r\n            leftColor: this.leftColor.asArray(),\r\n            rightColor: this.rightColor.asArray(),\r\n            bias: this.bias,\r\n            power: this.power,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Parse a JSON object and deserialize it to a new Fresnel parameter object.\r\n     * @param parsedFresnelParameters Define the JSON representation\r\n     * @returns the parsed parameters\r\n     */\r\n    public static Parse(parsedFresnelParameters: IFresnelParametersSerialized): FresnelParameters {\r\n        return new FresnelParameters({\r\n            isEnabled: parsedFresnelParameters.isEnabled,\r\n            leftColor: Color3.FromArray(parsedFresnelParameters.leftColor),\r\n            rightColor: Color3.FromArray(parsedFresnelParameters.rightColor),\r\n            bias: parsedFresnelParameters.bias,\r\n            power: parsedFresnelParameters.power || 1.0,\r\n        });\r\n    }\r\n}\r\n\r\n// References the dependencies.\r\nSerializationHelper._FresnelParametersParser = FresnelParameters.Parse;\r\n"]}