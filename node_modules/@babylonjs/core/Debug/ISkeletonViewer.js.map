{"version":3,"file":"ISkeletonViewer.js","sourceRoot":"","sources":["../../../../../lts/core/generated/Debug/ISkeletonViewer.ts"],"names":[],"mappings":"","sourcesContent":["import type { Skeleton } from \"../Bones/skeleton\";\r\nimport type { Color3 } from \"../Maths/math.color\";\r\n\r\n/**\r\n * Defines the options associated with the creation of a SkeletonViewer.\r\n */\r\nexport interface ISkeletonViewerOptions {\r\n    /** Should the system pause animations before building the Viewer? */\r\n    pauseAnimations: boolean;\r\n\r\n    /** Should the system return the skeleton to rest before building? */\r\n    returnToRest: boolean;\r\n\r\n    /** public Display Mode of the Viewer */\r\n    displayMode: number;\r\n\r\n    /** Flag to toggle if the Viewer should use the CPU for animations or not? */\r\n    displayOptions: ISkeletonViewerDisplayOptions;\r\n\r\n    /** Flag to toggle if the Viewer should use the CPU for animations or not? */\r\n    computeBonesUsingShaders: boolean;\r\n\r\n    /** Flag ignore non weighted bones */\r\n    useAllBones: boolean;\r\n}\r\n\r\n/**\r\n * Defines how to display the various bone meshes for the viewer.\r\n */\r\nexport interface ISkeletonViewerDisplayOptions {\r\n    /** How far down to start tapering the bone spurs */\r\n    midStep?: number;\r\n\r\n    /** How big is the midStep? */\r\n    midStepFactor?: number;\r\n\r\n    /** Base for the Sphere Size */\r\n    sphereBaseSize?: number;\r\n\r\n    /** The ratio of the sphere to the longest bone in units */\r\n    sphereScaleUnit?: number;\r\n\r\n    /** Ratio for the Sphere Size */\r\n    sphereFactor?: number;\r\n\r\n    /** Whether a spur should attach its far end to the child bone position */\r\n    spurFollowsChild?: boolean;\r\n\r\n    /** Whether to show local axes or not  */\r\n    showLocalAxes?: boolean;\r\n\r\n    /** Length of each local axis */\r\n    localAxesSize?: number;\r\n}\r\n\r\n/**\r\n * Defines the constructor options for the BoneWeight Shader.\r\n */\r\nexport interface IBoneWeightShaderOptions {\r\n    /** Skeleton to Map */\r\n    skeleton: Skeleton;\r\n\r\n    /** Colors for Uninfluenced bones */\r\n    colorBase?: Color3;\r\n\r\n    /** Colors for 0.0-0.25 Weight bones */\r\n    colorZero?: Color3;\r\n\r\n    /** Color for 0.25-0.5 Weight Influence */\r\n    colorQuarter?: Color3;\r\n\r\n    /** Color for 0.5-0.75 Weight Influence */\r\n    colorHalf?: Color3;\r\n\r\n    /** Color for 0.75-1 Weight Influence */\r\n    colorFull?: Color3;\r\n\r\n    /** Color for Zero Weight Influence */\r\n    targetBoneIndex?: number;\r\n}\r\n\r\n/**\r\n * Simple structure of the gradient steps for the Color Map.\r\n */\r\nexport interface ISkeletonMapShaderColorMapKnot {\r\n    /** Color of the Knot */\r\n    color: Color3;\r\n    /** Location of the Knot */\r\n    location: number;\r\n}\r\n\r\n/**\r\n * Defines the constructor options for the SkeletonMap Shader.\r\n */\r\nexport interface ISkeletonMapShaderOptions {\r\n    /** Skeleton to Map */\r\n    skeleton: Skeleton;\r\n    /** Array of ColorMapKnots that make the gradient must be ordered with knot[i].location < knot[i+1].location*/\r\n    colorMap?: ISkeletonMapShaderColorMapKnot[];\r\n}\r\n"]}