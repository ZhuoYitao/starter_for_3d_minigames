{"version":3,"file":"webGLHardwareTexture.js","sourceRoot":"","sources":["../../../../../../lts/core/generated/Engines/WebGL/webGLHardwareTexture.ts"],"names":[],"mappings":"AAGA,cAAc;AACd;IAWI,8BAAY,eAA8C,EAAE,OAA8B;QAA9E,gCAAA,EAAA,sBAA8C;QAP1D,gEAAgE;QACzD,sBAAiB,GAAgC,IAAI,CAAC;QAOzD,IAAI,CAAC,QAAQ,GAAG,OAAgC,CAAC;QACjD,IAAI,CAAC,eAAe,EAAE;YAClB,eAAe,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;YAC1C,IAAI,CAAC,eAAe,EAAE;gBAClB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;aACrD;SACJ;QACD,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC9B,CAAC;IAbD,sBAAW,oDAAkB;aAA7B;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IAaM,uCAAQ,GAAf,cAAyB,CAAC;IAEnB,kCAAG,GAAV,UAAW,eAA6B;QACpC,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC;IACzC,CAAC;IAEM,oCAAK,GAAZ;QACI,IAAI,CAAC,aAAa,GAAG,IAAW,CAAC;QACjC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAClC,CAAC;IAEM,sCAAO,GAAd;QACI,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACzD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;SACjC;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACnD;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IACL,2BAAC;AAAD,CAAC,AA5CD,IA4CC","sourcesContent":["import type { HardwareTextureWrapper } from \"../../Materials/Textures/hardwareTextureWrapper\";\r\nimport type { Nullable } from \"../../types\";\r\n\r\n/** @hidden */\r\nexport class WebGLHardwareTexture implements HardwareTextureWrapper {\r\n    private _webGLTexture: WebGLTexture;\r\n    private _context: WebGLRenderingContext;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    public _MSAARenderBuffer: Nullable<WebGLRenderbuffer> = null;\r\n\r\n    public get underlyingResource(): Nullable<WebGLTexture> {\r\n        return this._webGLTexture;\r\n    }\r\n\r\n    constructor(existingTexture: Nullable<WebGLTexture> = null, context: WebGLRenderingContext) {\r\n        this._context = context as WebGLRenderingContext;\r\n        if (!existingTexture) {\r\n            existingTexture = context.createTexture();\r\n            if (!existingTexture) {\r\n                throw new Error(\"Unable to create webGL texture\");\r\n            }\r\n        }\r\n        this.set(existingTexture);\r\n    }\r\n\r\n    public setUsage(): void {}\r\n\r\n    public set(hardwareTexture: WebGLTexture) {\r\n        this._webGLTexture = hardwareTexture;\r\n    }\r\n\r\n    public reset() {\r\n        this._webGLTexture = null as any;\r\n        this._MSAARenderBuffer = null;\r\n    }\r\n\r\n    public release() {\r\n        if (this._MSAARenderBuffer) {\r\n            this._context.deleteRenderbuffer(this._MSAARenderBuffer);\r\n            this._MSAARenderBuffer = null;\r\n        }\r\n\r\n        if (this._webGLTexture) {\r\n            this._context.deleteTexture(this._webGLTexture);\r\n        }\r\n        this.reset();\r\n    }\r\n}\r\n"]}