{"version":3,"file":"engine.externalTexture.js","sourceRoot":"","sources":["../../../../../../../lts/core/generated/Engines/WebGPU/Extensions/engine.externalTexture.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAGlD,OAAO,EAAE,qBAAqB,EAAE,MAAM,0BAA0B,CAAC;AACjE,OAAO,EAAE,MAAM,EAAE,MAAM,2BAA2B,CAAC;AAanD,MAAM,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,IAAY,EAAE,OAAkC;IAC5F,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnD,CAAC,CAAC;AAEF,YAAY,CAAC,SAAS,CAAC,qBAAqB,GAAG,UAAU,KAAuB;IAC5E,IAAM,OAAO,GAAG,IAAI,qBAAqB,CAAC,KAAK,CAAC,CAAC;IACjD,OAAO,OAAO,CAAC;AACnB,CAAC,CAAC;AAEF,YAAY,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,IAAY,EAAE,OAAkC;IAClG,IAAI,CAAC,OAAO,EAAE;QACV,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACpD,OAAO;KACV;IACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC5C,CAAC,CAAC","sourcesContent":["import { WebGPUEngine } from \"../../webgpuEngine\";\r\nimport type { ExternalTexture } from \"../../../Materials/Textures/externalTexture\";\r\nimport type { Nullable } from \"../../../types\";\r\nimport { WebGPUExternalTexture } from \"../webgpuExternalTexture\";\r\nimport { Effect } from \"../../../Materials/effect\";\r\n\r\ndeclare module \"../../../Materials/effect\" {\r\n    export interface Effect {\r\n        /**\r\n         * Sets an external texture on the engine to be used in the shader.\r\n         * @param name Name of the external texture variable.\r\n         * @param texture Texture to set.\r\n         */\r\n        setExternalTexture(name: string, texture: Nullable<ExternalTexture>): void;\r\n    }\r\n}\r\n\r\nEffect.prototype.setExternalTexture = function (name: string, texture: Nullable<ExternalTexture>): void {\r\n    this._engine.setExternalTexture(name, texture);\r\n};\r\n\r\nWebGPUEngine.prototype.createExternalTexture = function (video: HTMLVideoElement): Nullable<ExternalTexture> {\r\n    const texture = new WebGPUExternalTexture(video);\r\n    return texture;\r\n};\r\n\r\nWebGPUEngine.prototype.setExternalTexture = function (name: string, texture: Nullable<ExternalTexture>): void {\r\n    if (!texture) {\r\n        this._currentMaterialContext.setTexture(name, null);\r\n        return;\r\n    }\r\n    this._setInternalTexture(name, texture);\r\n};\r\n"]}