{"version":3,"file":"engine.debugging.js","sourceRoot":"","sources":["../../../../../../../lts/core/generated/Engines/WebGPU/Extensions/engine.debugging.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebGPUEngine } from \"../../webgpuEngine\";\r\n\r\nWebGPUEngine.prototype._debugPushGroup = function (groupName: string, targetObject?: number): void {\r\n    if (!this._options.enableGPUDebugMarkers) {\r\n        return;\r\n    }\r\n\r\n    if (targetObject === 0 || targetObject === 1) {\r\n        const encoder = targetObject === 0 ? this._renderEncoder : this._renderTargetEncoder;\r\n        encoder.pushDebugGroup(groupName);\r\n    } else if (this._currentRenderPass) {\r\n        this._currentRenderPass.pushDebugGroup(groupName);\r\n    } else {\r\n        this._pendingDebugCommands.push([\"push\", groupName]);\r\n    }\r\n};\r\n\r\nWebGPUEngine.prototype._debugPopGroup = function (targetObject?: number): void {\r\n    if (!this._options.enableGPUDebugMarkers) {\r\n        return;\r\n    }\r\n\r\n    if (targetObject === 0 || targetObject === 1) {\r\n        const encoder = targetObject === 0 ? this._renderEncoder : this._renderTargetEncoder;\r\n        encoder.popDebugGroup();\r\n    } else if (this._currentRenderPass) {\r\n        this._currentRenderPass.popDebugGroup();\r\n    } else {\r\n        this._pendingDebugCommands.push([\"pop\", null]);\r\n    }\r\n};\r\n\r\nWebGPUEngine.prototype._debugInsertMarker = function (text: string, targetObject?: number): void {\r\n    if (!this._options.enableGPUDebugMarkers) {\r\n        return;\r\n    }\r\n\r\n    if (targetObject === 0 || targetObject === 1) {\r\n        const encoder = targetObject === 0 ? this._renderEncoder : this._renderTargetEncoder;\r\n        encoder.insertDebugMarker(text);\r\n    } else if (this._currentRenderPass) {\r\n        this._currentRenderPass.insertDebugMarker(text);\r\n    } else {\r\n        this._pendingDebugCommands.push([\"insert\", text]);\r\n    }\r\n};\r\n\r\nWebGPUEngine.prototype._debugFlushPendingCommands = function (): void {\r\n    for (let i = 0; i < this._pendingDebugCommands.length; ++i) {\r\n        const [name, param] = this._pendingDebugCommands[i];\r\n\r\n        switch (name) {\r\n            case \"push\":\r\n                this._debugPushGroup(param!);\r\n                break;\r\n            case \"pop\":\r\n                this._debugPopGroup();\r\n                break;\r\n            case \"insert\":\r\n                this._debugInsertMarker(param!);\r\n                break;\r\n        }\r\n    }\r\n    this._pendingDebugCommands.length = 0;\r\n};\r\n"]}